웨비너 (Bridge to Scala)

영어,용어 정리

자바8 왜 배워야할까?

System


Functional Programming?

1. 입력값과 출력값의 관계를 주목해야한다. 동일한 입력값에서는 항상 동일한 결과값이 일어난다.
10년뒤에 값을넣어도 같다는 의미다. Side Effect가 없다.
2. 불변성(Immutability)을 가진다. 그래서 함수를 사용해서 하나의 형태를 다른형태로 계속 변화된다.
ex) a().b().c().d().~~~~blabla~~ 개발자는 메모리의 사용이 의심될 수 있는데
최종 생성물은 원본에대한 참조값을 가지고있지않다.
리스트로 예를 들면 리스트에 미리 값을 넣어놓고 특정인덱스의 값을 변화시키고 싶을떄는, 함수형 프로그래밍에서는 불가능하다.
하지만 일부분을 가지고 변경및 추가는 가능하기 때문에 재사용이 쉬워진다.
값이 필요할 때만 생성하기 떄문에 메모리 문제에 신경을 쓰지 않아도된다.
원본을 건드리지 않고 새로운 것을 생성한다.
3.Laziness?
필요하지 않으면 미리 계산하거나 준비하지 않는다.

Lamda Express
1.함수 자체를 다른 함수의 인자값으로 주입가능하다.
2.결과값으로 메서드를 받을수도 있고, 이러한 결과값들을 nata Structure 같은곳에 저장가능하다  리스트같은것 말이다.

parallelStream은 CPU의 코어의 갯수에 영향을 받는다 ForkJoin FrameWork에 의해서 디자인 됬기떄문에 그렇다
갸령 리스트에 1,2,3,4,5,6,7,8 식으로 8개의 코어를 가진 CPU환경에서 병렬처리를 진행시 4초간 쓰레드 슬립을하고,
실행해보면 4초가 걸리지만 CPU의 코어를 초월하는 9개의 리스트를 처리시에는 8 초가 걸린다.

High-Order Function?
